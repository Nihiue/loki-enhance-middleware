# This is a basic workflow to help you get started with Actions
name: Test and Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    paths:
      - 'test/**'
      - 'src/**'
      - 'package.json'
      - 'Dockerfile'

    branches: [ main ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    name: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
        - uses: actions/checkout@v2
        - uses: pnpm/action-setup@v2.2.2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v2
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'pnpm'

        - name: Install dependencies & build
          run: pnpm install && pnpm run build && pnpm run compile-proto

        - name: Run test
          run: pnpm run test

        - name: Prune
          run: pnpm prune --prod

  build:
    name: build
    needs: [ test ]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        -
          name: Build and push Docker images
          # You may pin to the exact commit or the version.
          # uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f
          uses: docker/build-push-action@v2.4.0
          id: docker_build
          with:
            # List of tags
            push: true
            tags: "nihiue/loki_enhance_middleware:latest"
        -
          name: Image digest
          run: echo ${{ steps.docker_build.outputs.digest }}